kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: api-dc
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Nodejs Runtime Image
      labels:
        shared: 'true'
      creationTimestamp: null
      generation: 0
      name: '${NAME}'
    spec:
      lookupPolicy:
        local: false
    status:
      dockerImageRepository: null
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      creationTimestamp: null
      generation: 0
      labels: null
      name: '${NAME}${SUFFIX}'
    spec:
      replicas: '${{REPLICAS}}'
      revisionHistoryLimit: 10
      selector:
        deploymentConfig: '${NAME}${SUFFIX}'
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          timeoutSeconds: 600
        resources:
          limits:
            cpu: '${CPU_LIMIT}'
            memory: '${MEMORY_LIMIT}'
          requests:
            cpu: '${CPU_REQ}'
            memory: '${MEMORY_REQ}'
        type: Rolling
      template:
        metadata:
          annotations: null
          creationTimestamp: null
          labels:
            deploymentConfig: '${NAME}${SUFFIX}'
        spec:
          containers:
            - resources:
                limits:
                  cpu: '${CPU_LIMIT}'
                  memory: '${MEMORY_LIMIT}'
                requests:
                  cpu: '${CPU_REQ}'
                  memory: '${MEMORY_REQ}'
              readinessProbe:
                failureThreshold: 10
                httpGet:
                  path: /api/misc/version
                  port: 3001
                  scheme: HTTP
                initialDelaySeconds: 140
                periodSeconds: 30
                successThreshold: 1
                timeoutSeconds: 20
              terminationMessagePath: /dev/termination-log
              name: api
              livenessProbe:
                failureThreshold: 10
                httpGet:
                  path: /api/misc/version
                  port: 3001
                  scheme: HTTP
                initialDelaySeconds: 90
                periodSeconds: 30
                successThreshold: 1
                timeoutSeconds: 20
              env:
                - name: DB_HOST
                  value: '${DB_SERVICE_NAME}'
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: '${NAME}${SUFFIX}'
                - name: DB_PASS
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: '${NAME}${SUFFIX}'
                - name: DB_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: '${NAME}${SUFFIX}'
                - name: DB_PORT
                  value: '5432'
                - name: APP_CERTIFICATE_URL
                  value: '${CERTIFICATE_URL}'
                - name: CHANGE_VERSION
                  value: '${CHANGE_ID}'
                - name: ENVIRONMENT
                  value: '${ENVIRONMENT}'
                - name: VERSION
                  value: '${VERSION}'
                - name: DB_MIGRATION_TYPE
                  value: '${DB_MIGRATION_TYPE}'
                - name: DB_CLEAN_UP
                  value: '${DB_CLEAN_UP}'
                - name: DB_SEED
                  value: '${DB_SEED}'
                - name: APP_EMAIL_SENDER
                  valueFrom:
                    secretKeyRef:
                      key: sender
                      name: '${MAILER_INFO}'
                - name: APP_EMAIL_SENDER_PWD
                  valueFrom:
                    secretKeyRef:
                      key: sender-password
                      name: '${MAILER_INFO}'
                - name: APP_EMAIL_TEST_RECEIVER
                  valueFrom:
                    secretKeyRef:
                      key: test-receiver
                      name: '${MAILER_INFO}'
                - name: APP_REPORT_RECEIVER
                  valueFrom:
                    secretKeyRef:
                      key: receiver-list
                      name: '${MAILER_INFO}'
              ports:
                - containerPort: '${{PORT}}'
                  protocol: TCP
                - containerPort: 8080
                  protocol: TCP
              imagePullPolicy: Always
              volumeMounts:
                - mountPath: /opt/app-root/app
                  name: '${NAME}${SUFFIX}'
              terminationMessagePolicy: File
              image: ' '
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - emptyDir: {}
              name: '${NAME}${SUFFIX}'
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - api
            from:
              kind: ImageStreamTag
              name: '${NAME}:${VERSION}'
          type: ImageChange
        - type: ConfigChange
    status:
      availableReplicas: 0
      latestVersion: 0
      observedGeneration: 0
      replicas: 0
      unavailableReplicas: 0
      updatedReplicas: 0
  - apiVersion: v1
    stringData:
      database-name: ''
      database-password: ''
      database-user: ''
    kind: Secret
    metadata:
      annotations:
        as-copy-of: '${DB_SERVICE_NAME}'
      creationTimestamp: null
      name: '${NAME}${SUFFIX}'
    type: Opaque
  - apiVersion: v1
    kind: Service
    metadata:
      annotations: null
      creationTimestamp: null
      labels: {}
      name: '${NAME}${SUFFIX}'
    spec:
      ports:
        - name: '${NAME}-${APP_PORT_DEFAULT}'
          port: '${{PORT}}'
          protocol: TCP
          targetPort: '${{PORT}}'
        - name: '${APP_PORT_OTHER}'
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: '${NAME}${SUFFIX}'
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations: {}
      creationTimestamp: null
      labels: {}
      name: '${NAME}${SUFFIX}'
    spec:
      host: '${HOST}'
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      port:
        targetPort: '${NAME}-${APP_PORT_DEFAULT}'
      to:
        kind: Service
        name: '${NAME}${SUFFIX}'
        weight: 100
      wildcardPolicy: None
    status:
      ingress: null
  - apiVersion: autoscaling/v1
    kind: HorizontalPodAutoscaler
    metadata:
      annotations: {}
      creationTimestamp: null
      labels: {}
      name: '${NAME}${SUFFIX}'
    spec:
      maxReplicas: '${{REPLICA_MAX}}'
      minReplicas: '${{REPLICAS}}'
      scaleTargetRef:
        apiVersion: v1
        kind: DeploymentConfig
        name: '${NAME}${SUFFIX}'
      cpuUtilization:
        targetPercentage: 95
parameters:
  - name: NAME
    value: invasivesbc-api
  - name: SUFFIX
    value: '-dev'
  - name: VERSION
    description: Version of the application
    value: 1.0.0
  - name: HOST
    description: Host name of the application
    required: true
  - name: CHANGE_ID
    description: Change id of the project. This will help to pull image stream
    value: '0'
    required: true
  - name: DB_SERVICE_NAME
    description: Database service name associated  with deployment
    required: true
  - name: ENVIRONMENT
    description: Application Environment type variable
    value: dev
    required: true
  - name: CERTIFICATE_URL
    description: Authentication certificate urls
    value: 'https://oidc.gov.bc.ca/auth/realms/dfmlcg7z/protocol/openid-connect/certs'
    required: true
  - name: CPU_REQ
    value: 500m
  - name: CPU_LIMIT
    value: 750m
  - name: MEMORY_REQ
    value: 1Gi
  - name: MEMORY_LIMIT
    value: 2Gi
  - name: REPLICAS
    value: '1'
  - name: APP_PORT_DEFAULT
    value: 3001-tcp
  - name: APP_PORT_OTHER
    value: 8080-tcp
  - name: PORT
    value: '3001'
  - name: DB_MIGRATION_TYPE
    value: refresh
  - name: DB_CLEAN_UP
    value: none
  - name: DB_SEED
    value: 'yes'
  - name: MAILER_INFO
    value: invasivesbc-mailer
  - name: REPLICA_MAX
    value: '1'
    required: true
