# Test Deploy On OpensShift
name: Static Deploy on OpensShift

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
    branches:
      - dev
      - prod
jobs:
  checkEnv:
    name: Check Env variables
    runs-on: ubuntu-latest
    steps:
      - name: Print Env Vars
        run: |
          echo ${{ github.base_ref }}
          echo $GITHUB_BASE_REF
          echo $GITHUB_HEAD_REF
    #end steps
  #end checkEnv
  buildAPI:
    name: Build API Static
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true}}
    env:
      BUILD_ID: ${{ github.event.number }}
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 
        uses: actions/setup-node@v1
        with:
          node-version: 10.16
      - name: Install OpenShift
        run: |
          cd $HOME
          curl -LO https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          tar -xf openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          cd openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit
          chmod +x oc
          echo "::set-env name=PATH_TO_OC::$PATH:$(pwd)"
          export PATH=$PATH_TO_OC
      - name: Login into OpenShift
        run: |
          export PATH=$PATH_TO_OC
          oc login https://console.pathfinder.gov.bc.ca:8443 --token=${{ secrets.TOOLS_SA_TOKEN }}
      - name: Build API Images
        working-directory: './api/.pipeline/'
        run: |
          export PATH=$PATH_TO_OC
          npm ci
          DEBUG=* npm run build -- --pr=$BUILD_ID --branch=${{ github.base_ref }} --type=static
  # End buildAPI
  buildAPP:
    name: Build App Static
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true}}
    env:
      BUILD_ID: ${{ github.event.number }}
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 
        uses: actions/setup-node@v1
        with:
          node-version: 10.16
      - name: Install OpenShift
        run: |
          cd $HOME
          curl -LO https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          tar -xf openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          cd openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit
          chmod +x oc
          echo "::set-env name=PATH_TO_OC::$PATH:$(pwd)"
      - name: Login into OpenShift
        run: |
          export PATH=$PATH_TO_OC
          oc login https://console.pathfinder.gov.bc.ca:8443 --token=${{ secrets.TOOLS_SA_TOKEN }}
      - name: Build API Images
        working-directory: './app/.pipeline/'
        run: |
          export PATH=$PATH_TO_OC
          npm ci
          DEBUG=* npm run build -- --pr=$BUILD_ID --branch=${{ github.base_ref }} --type=static
  # End buildAPP
  deployDev:
    name: Deploy App and API in DEV
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true && github.base_ref != 'prod'}}
    env:
      BUILD_ID: ${{ github.event.number }}
    needs: 
      - buildAPI
      - buildAPP
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 
        uses: actions/setup-node@v1
        with:
          node-version: 10.16
      - name: Install OpenShift
        run: |
          cd $HOME
          curl -LO https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          tar -xf openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          cd openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit
          chmod +x oc
          echo "::set-env name=PATH_TO_OC::$PATH:$(pwd)"
      - name: Login into OpenShift
        run: |
          export PATH=$PATH_TO_OC
          oc login https://console.pathfinder.gov.bc.ca:8443 --token=${{ secrets.TOOLS_SA_TOKEN }}
      - name: Deploy API
        working-directory: './api/.pipeline/'
        run: |
          export PATH=$PATH_TO_OC
          npm ci
          DEBUG=* npm run pre-deploy -- --pr=$BUILD_ID --env=dev --type=static --branch=${{ github.base_ref }}
          DEBUG=* npm run setup -- --pr=$BUILD_ID --env=dev --type=static --branch=${{ github.base_ref }}
          DEBUG=* npm run seed -- --pr=$BUILD_ID --env=dev --type=static --branch=${{ github.base_ref }}
          DEBUG=* npm run deploy -- --pr=$BUILD_ID --env=dev --type=static --branch=${{ github.base_ref }}
          DEBUG=* npm run deploy-tools -- --pr=$BUILD_ID --env=dev --type=static --branch=${{ github.base_ref }}
      - name: Deploy App
        working-directory: './app/.pipeline'
        run: |
          export PATH=$PATH_TO_OC
          npm ci
          DEBUG=* npm run deploy -- --pr=$BUILD_ID --env=dev --type=static --branch=${{ github.base_ref }}
  # End deployDev
  deployTest:
    name: Deploy App and API in TEST
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true && github.base_ref != 'prod'}}
    env:
      BUILD_ID: ${{ github.event.number }}
    needs: 
      - buildAPI
      - buildAPP
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 
        uses: actions/setup-node@v1
        with:
          node-version: 10.16
      - name: Install OpenShift
        run: |
          cd $HOME
          curl -LO https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          tar -xf openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          cd openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit
          chmod +x oc
          echo "::set-env name=PATH_TO_OC::$PATH:$(pwd)"
      - name: Login into OpenShift
        run: |
          export PATH=$PATH_TO_OC
          oc login https://console.pathfinder.gov.bc.ca:8443 --token=${{ secrets.TOOLS_SA_TOKEN }}
      - name: Deploy API
        working-directory: './api/.pipeline/'
        run: |
          export PATH=$PATH_TO_OC
          npm ci
          DEBUG=* npm run pre-deploy -- --pr=$BUILD_ID --env=test --type=static --branch=${{ github.base_ref }}
          DEBUG=* npm run setup -- --pr=$BUILD_ID --env=test --type=static --branch=${{ github.base_ref }}
          DEBUG=* npm run seed -- --pr=$BUILD_ID --env=test --type=static --branch=${{ github.base_ref }}
          DEBUG=* npm run deploy -- --pr=$BUILD_ID --env=test --type=static --branch=${{ github.base_ref }}
          DEBUG=* npm run deploy-tools -- --pr=$BUILD_ID --env=test --type=static --branch=${{ github.base_ref }}
      - name: Deploy App
        working-directory: './app/.pipeline'
        run: |
          export PATH=$PATH_TO_OC
          npm ci
          DEBUG=* npm run deploy -- --pr=$BUILD_ID --env=test --type=static --branch=${{ github.base_ref }}
  # End deployTest
  deployProd:
    name: Deploy App and API in PROD
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true && github.base_ref == 'prod'}}
    env:
      BUILD_ID: ${{ github.event.number }}
    needs: 
      - buildAPI
      - buildAPP
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 
        uses: actions/setup-node@v1
        with:
          node-version: 10.16
      - name: Install OpenShift
        run: |
          cd $HOME
          curl -LO https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          tar -xf openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          cd openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit
          chmod +x oc
          echo "::set-env name=PATH_TO_OC::$PATH:$(pwd)"
      - name: Login into OpenShift
        run: |
          export PATH=$PATH_TO_OC
          oc login https://console.pathfinder.gov.bc.ca:8443 --token=${{ secrets.TOOLS_SA_TOKEN }}
      - name: Deploy API
        working-directory: './api/.pipeline/'
        run: |
          export PATH=$PATH_TO_OC
          npm ci
          DEBUG=* npm run pre-deploy -- --pr=$BUILD_ID --env=prod --type=static --branch=${{ github.base_ref }}
          DEBUG=* npm run setup -- --pr=$BUILD_ID --env=prod --type=static --branch=${{ github.base_ref }}
          DEBUG=* npm run deploy -- --pr=$BUILD_ID --env=prod --type=static --branch=${{ github.base_ref }}
          DEBUG=* npm run deploy-tools -- --pr=$BUILD_ID --env=prod --type=static --branch=${{ github.base_ref }}
      - name: Deploy App
        working-directory: './app/.pipeline'
        run: |
          export PATH=$PATH_TO_OC
          npm ci
          DEBUG=* npm run deploy -- --pr=$BUILD_ID --env=prod --type=static --branch=${{ github.base_ref }}
  # End deployDev
  clean:
    name: Clean PR based deployment
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true && github.base_ref == 'dev'  }}
    needs: 
      - buildAPI
      - buildAPP
      - deployDev
      - deployTest
    env:
      BUILD_ID: ${{ github.event.number }}
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 
        uses: actions/setup-node@v1
        with:
          node-version: 10.16
      - name: Install OpenShift
        run: |
          cd $HOME
          curl -LO https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          tar -xf openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          cd openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit
          chmod +x oc
          echo "::set-env name=PATH_TO_OC::$PATH:$(pwd)"
          export PATH=$PATH_TO_OC
      - name: Login into OpenShift
        run: |
          export PATH=$PATH_TO_OC
          oc login https://console.pathfinder.gov.bc.ca:8443 --token=${{ secrets.TOOLS_SA_TOKEN }}
      - name: Clean API Deployment
        working-directory: './api/.pipeline/'
        run: |
          export PATH=$PATH_TO_OC
          npm ci
          DEBUG=* npm run clean -- --pr=$BUILD_ID --env=build
          DEBUG=* npm run clean -- --pr=$BUILD_ID --env=dev
      - name: Clean APP Deployment
        working-directory: './app/.pipeline/'
        run: |
          export PATH=$PATH_TO_OC
          npm ci
          DEBUG=* npm run clean -- --pr=$BUILD_ID --env=build
          DEBUG=* npm run clean -- --pr=$BUILD_ID --env=dev
  # End clean
  cleanProd:
    name: Clean PR based deployment for Production Env
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true && github.base_ref == 'prod' }}
    needs: 
      - buildAPI
      - buildAPP
      - deployProd
    env:
      BUILD_ID: ${{ github.event.number }}
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 
        uses: actions/setup-node@v1
        with:
          node-version: 10.16
      - name: Install OpenShift
        run: |
          cd $HOME
          curl -LO https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          tar -xf openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          cd openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit
          chmod +x oc
          echo "::set-env name=PATH_TO_OC::$PATH:$(pwd)"
          export PATH=$PATH_TO_OC
      - name: Login into OpenShift
        run: |
          export PATH=$PATH_TO_OC
          oc login https://console.pathfinder.gov.bc.ca:8443 --token=${{ secrets.TOOLS_SA_TOKEN }}
      - name: Clean API Deployment
        working-directory: './api/.pipeline/'
        run: |
          export PATH=$PATH_TO_OC
          npm ci
          DEBUG=* npm run clean -- --pr=$BUILD_ID --env=build
          DEBUG=* npm run clean -- --pr=$BUILD_ID --env=dev
      - name: Clean APP Deployment
        working-directory: './app/.pipeline/'
        run: |
          export PATH=$PATH_TO_OC
          npm ci
          DEBUG=* npm run clean -- --pr=$BUILD_ID --env=build
          DEBUG=* npm run clean -- --pr=$BUILD_ID --env=dev
  # End clean
# --